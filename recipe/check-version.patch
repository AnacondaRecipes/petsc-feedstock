From 53a5e9c0558560048914cf899e06b52f068f9586 Mon Sep 17 00:00:00 2001
From: Satish Balay <balay@mcs.anl.gov>
Date: Tue, 22 Oct 2019 17:15:12 -0500
Subject: [PATCH] configure: pkg version check: attempt to make it robust
 against cpp spliting up lines or adding spaces

# 4 "/tmp/petsc-gUHwey/config.packages.hypre/conftest.c" 2
version=
# 4 "/tmp/petsc-gUHwey/config.packages.hypre/conftest.c" 3
       "2.17.0"

Reported-by: Justin Herter <herter@kairospower.com>
---
 config/BuildSystem/config/package.py | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/config/BuildSystem/config/package.py b/config/BuildSystem/config/package.py
index 63ae9286d5..c36bcbafed 100644
--- a/config/BuildSystem/config/package.py
+++ b/config/BuildSystem/config/package.py
@@ -2,6 +2,7 @@ from __future__ import generators
 import config.base
 
 import os
+import re
 
 try:
   from hashlib import md5 as new_md5
@@ -997,7 +998,7 @@ If its a remote branch, use: origin/'+self.gitcommit+' for commit.')
     else:
       self.pushLanguage(self.defaultLanguage)
     try:
-      output = self.outputPreprocess('#include "'+self.versioninclude+'"\nversion='+self.versionname+'\n')
+      output = self.outputPreprocess('#include "'+self.versioninclude+'"\n;petscpkgver('+self.versionname+');\n')
     except:
       self.log.write('For '+self.package+' unable to run preprocessor to obtain version information, skipping version check\n')
       self.popLanguage()
@@ -1005,14 +1006,16 @@ If its a remote branch, use: origin/'+self.gitcommit+' for commit.')
       return
     self.popLanguage()
     self.compilers.CPPFLAGS = oldFlags
-    loutput = output.split('\n')
+    #strip #lines
+    output = re.sub('#.*\n','\n',output)
+    #strip newlines,spaces,quotes
+    output = re.sub('[\n "]*','',output)
+    #now split over ';'
+    loutput = output.split(';')
     version = ''
     for i in loutput:
-      if i.startswith('version='):
-        version = i[8:]
-        break
-      if i.startswith('version ='):
-        version = i[9:]
+      if i.find('petscpkgver') >=0:
+        version = i.split('(')[1].split(')')[0]
         break
     if not version:
       self.log.write('For '+self.package+' unable to find version information: output below, skipping version check\n')
@@ -1020,7 +1023,6 @@ If its a remote branch, use: origin/'+self.gitcommit+' for commit.')
       if self.requiresversion:
         raise RuntimeError('Configure must be able to determined the version information for '+self.name+'. It was unable to, please send configure.log to petsc-maint@mcs.anl.gov')
       return
-    version = version.replace(' ','').replace('\"','')
     try:
       self.foundversion = self.versionToStandardForm(version)
       self.version_tuple = self.versionToTuple(self.foundversion)
-- 
2.22.0

